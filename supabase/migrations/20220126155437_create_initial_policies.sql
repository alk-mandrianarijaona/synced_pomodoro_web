-- This script was generated by the Schema Diff utility in pgAdmin 4
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps.

ALTER TABLE IF EXISTS public.profiles
    ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Enable access to all users"
    ON public.profiles
    AS PERMISSIVE
    FOR SELECT
    TO public
    USING (true);

CREATE POLICY "Enable update for users based on id"
    ON public.profiles
    AS PERMISSIVE
    FOR UPDATE
    TO public
    USING ((auth.uid() = id))
    WITH CHECK ((auth.uid() = id));

ALTER TABLE IF EXISTS public.pomodoros
    ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Enable access to all users"
    ON public.pomodoros
    AS PERMISSIVE
    FOR SELECT
    TO public
    USING (true);

CREATE POLICY "Enable update for users based on email"
    ON public.pomodoros
    AS PERMISSIVE
    FOR UPDATE
    TO public
    USING ((auth.uid() = created_by))
    WITH CHECK ((auth.uid() = created_by));


CREATE POLICY "Enable insert for authenticated users only"
    ON public.pomodoros
    AS PERMISSIVE
    FOR INSERT
    TO public
    WITH CHECK ((auth.role() = 'authenticated'::text));


CREATE POLICY "Enable delete for users based on user_id"
    ON public.pomodoros
    AS PERMISSIVE
    FOR DELETE
    TO public
    USING ((auth.uid() = created_by));
